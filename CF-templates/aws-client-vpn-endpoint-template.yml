---
Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.192.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/Resource
  VpcPrivateSubnet1Subnet536B997A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock: 10.192.0.0/24
      MapPublicIpOnLaunch: false
      Tags:
      - Key: aws-cdk:subnet-name
        Value: Private
      - Key: aws-cdk:subnet-type
        Value: Isolated
      - Key: Name
        Value: WorkspaceStack/Vpc/PrivateSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc/PrivateSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock: 10.192.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: aws-cdk:subnet-name
        Value: Public
      - Key: aws-cdk:subnet-type
        Value: Public
      - Key: Name
        Value: WorkspaceStack/Vpc/PublicSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc/PublicSubnet1
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
    DependsOn:
    - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - VpcPublicSubnet1EIPD7E02669
        - AllocationId
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc/PublicSubnet1
    DependsOn:
    - VpcPublicSubnet1DefaultRoute3DA9E72A
    - VpcPublicSubnet1RouteTableAssociation97140677
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/PublicSubnet1/NATGateway
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/VPCGW
  VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
        - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
        - Vpc8378EB38
        - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/RestrictDefaultSecurityGroupCustomResource/Default
  VpcSSMvpcEndpointSecurityGroup9C0747F8:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WorkspaceStack/Vpc/SSMvpcEndpoint/SecurityGroup
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: Allow all outbound traffic by default
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - Vpc8378EB38
          - CidrBlock
        Description:
          Fn::Join:
          - ''
          - - 'from '
            - Fn::GetAtt:
              - Vpc8378EB38
              - CidrBlock
            - ":443"
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/SSMvpcEndpoint/SecurityGroup/Resource
  VpcSSMvpcEndpointFB1FBEE1:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
      - Fn::GetAtt:
        - VpcSSMvpcEndpointSecurityGroup9C0747F8
        - GroupId
      ServiceName:
        Fn::Join:
        - ''
        - - com.amazonaws.
          - Ref: AWS::Region
          - ".ssm"
      SubnetIds:
      - Ref: VpcPrivateSubnet1Subnet536B997A
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
      VpcEndpointType: Interface
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/SSMvpcEndpoint/Resource
  VpcSSMMessagesEndpointSecurityGroup7E720989:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WorkspaceStack/Vpc/SSMMessagesEndpoint/SecurityGroup
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: Allow all outbound traffic by default
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - Vpc8378EB38
          - CidrBlock
        Description:
          Fn::Join:
          - ''
          - - 'from '
            - Fn::GetAtt:
              - Vpc8378EB38
              - CidrBlock
            - ":443"
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/SSMMessagesEndpoint/SecurityGroup/Resource
  VpcSSMMessagesEndpoint399F2904:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
      - Fn::GetAtt:
        - VpcSSMMessagesEndpointSecurityGroup7E720989
        - GroupId
      ServiceName:
        Fn::Join:
        - ''
        - - com.amazonaws.
          - Ref: AWS::Region
          - ".ssmmessages"
      SubnetIds:
      - Ref: VpcPrivateSubnet1Subnet536B997A
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
      VpcEndpointType: Interface
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/SSMMessagesEndpoint/Resource
  VpcEC2MessagesEndpointSecurityGroup0D9D4086:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WorkspaceStack/Vpc/EC2MessagesEndpoint/SecurityGroup
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: Allow all outbound traffic by default
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp:
          Fn::GetAtt:
          - Vpc8378EB38
          - CidrBlock
        Description:
          Fn::Join:
          - ''
          - - 'from '
            - Fn::GetAtt:
              - Vpc8378EB38
              - CidrBlock
            - ":443"
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/EC2MessagesEndpoint/SecurityGroup/Resource
  VpcEC2MessagesEndpoint73F313D2:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
      - Fn::GetAtt:
        - VpcEC2MessagesEndpointSecurityGroup0D9D4086
        - GroupId
      ServiceName:
        Fn::Join:
        - ''
        - - com.amazonaws.
          - Ref: AWS::Region
          - ".ec2messages"
      SubnetIds:
      - Ref: VpcPrivateSubnet1Subnet536B997A
      Tags:
      - Key: Name
        Value: WorkspaceStack/Vpc
      VpcEndpointType: Interface
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Vpc/EC2MessagesEndpoint/Resource
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: Inline
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:RevokeSecurityGroupEgress
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ":ec2:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":security-group/"
                - Fn::GetAtt:
                  - Vpc8378EB38
                  - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: WorkspaceStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
        - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
        - Arn
      Runtime: nodejs22.x
      Description: Lambda function for removing all inbound/outbound rules from the
        VPC default security group
    DependsOn:
    - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: WorkspaceStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200
      aws:asset:property: Code
  SSMroleC71A5031:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":iam::aws:policy/AmazonSSMManagedInstanceCore"
    Metadata:
      aws:cdk:path: WorkspaceStack/SSMrole/Resource
  SSMroleDefaultPolicyCDCCCA22:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action: cloudformation:SignalResource
          Effect: Allow
          Resource:
            Ref: AWS::StackId
        Version: '2012-10-17'
      PolicyName: SSMroleDefaultPolicyCDCCCA22
      Roles:
      - Ref: SSMroleC71A5031
    Metadata:
      aws:cdk:path: WorkspaceStack/SSMrole/DefaultPolicy/Resource
  Ec2SgF43886FE:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow EC2 to use SSM
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: Allow all outbound traffic by default
        IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: WorkspaceStack/Ec2Sg/Resource
  LaunchTemplateProfile94AA77CE:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - Ref: SSMroleC71A5031
    Metadata:
      aws:cdk:path: WorkspaceStack/LaunchTemplate/Profile
  LaunchTemplate04EC5460:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
            - LaunchTemplateProfile94AA77CE
            - Arn
        ImageId:
          Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
        InstanceType: t3.micro
        SecurityGroupIds:
        - Fn::GetAtt:
          - Ec2SgF43886FE
          - GroupId
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: WorkspaceStack/LaunchTemplate
        - ResourceType: volume
          Tags:
          - Key: Name
            Value: WorkspaceStack/LaunchTemplate
        UserData:
          Fn::Base64: "\n                #!/bin/bash\n                yum -y update\n
            \               yum -y install httpd\n                systemctl start
            httpd\n                systemctl enable httpd\n                echo \"<h1>Hello
            World from $(hostname -f)</h1>\" > /var/www/html/index.html\n                "
      TagSpecifications:
      - ResourceType: launch-template
        Tags:
        - Key: Name
          Value: WorkspaceStack/LaunchTemplate
    DependsOn:
    - SSMroleDefaultPolicyCDCCCA22
    - SSMroleC71A5031
    Metadata:
      aws:cdk:path: WorkspaceStack/LaunchTemplate/Resource
  ASG46ED3070:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId:
          Ref: LaunchTemplate04EC5460
        Version:
          Fn::GetAtt:
          - LaunchTemplate04EC5460
          - LatestVersionNumber
      MaxSize: '2'
      MinSize: '1'
      VPCZoneIdentifier:
      - Ref: VpcPrivateSubnet1Subnet536B997A
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT2M
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: WorkspaceStack/ASG/ASG
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/91VS2/bOBD+LeWxYLSbFOjBN8UpCgHtRrCNHGoEizE1dthQQy4fSl3B/31BirIVZ7eX5lD0JPLjPL956Kq4urws/nwDT+5CNI8XSm6KfulBPHJ4cn/3KK6K/s6Idc+EbCybsbeMsxa+ld9dvhD4j+DxCfYj4sKG0M81beUuWPBSE5ute0bQ4jOR1d5EoHJagceG8eTkM7jHJHbg/69Th42S4oXG/eGez7d0V895bWUHHpdJa90z6EAq2Egl/f6LptFqZ0TV5HO0da20eDzmaQY/lbmlTxBIPLDZFpRDzqTp3s/P5ME5uaPKdO/LprHo3C3NLWYCckK/QhiJo4GYeFro4HEFG4Un/ISVzmkhkzYfwnh1Sr0NvwCjPxVFCqRp/joOA5ut2VuW+zGxGQ8fqjp+TmLxVpFHSziF7up5vpXeg3hokTxPclsQeGfEB2qMlhSr0BkxTgjaTgpks56ZoftvyN3gFoLyY36TgTLa+hx/Hi4XVf97Ng8xw1dw9Vpm7vkSRbDS7z9aHcyEh1yKinaxVIugMG0fAVSRkoQDMtgWmghFLOS4vALJfwLmzkmFjXCatvtp7L+TF85AKf1UKnUb/EYHakabDTphpTlfHVPmc7uODcmHcVpha2LjrHsmyXkggbmjhvkTD5KwamE3Qlar46Kfmh9TcWhvwMMkiueODlxCW/QLraJPcC602Fzvc2eRkAZUKYQO5E9THVqMCqU4JZgZ/wwEO2xqraTYJ87bKVLakY8sv9L16OWkk1/TBA/1Or6l3fDDx7w4FPIBj+hRYaUXia8zOy/hpll68Bj3h8shJcODzWH7DOWprd5KhQcOwWsnQEnaFX0ZvF4Ol3HOWvg2BwNC+v1YTklnSNyXoMY+7Ez+Z/xov/BJO6pnpZ1OwpDhM4pTPudxHg58gU4HKzCRwefBed2eYVsagbP32upONmivwSEvnUO/9LCTtEvcgYUWPdoDr/f+QdMf74rLq+Ldm69OygsbyMsWi8Xw/RfTQTKNYgkAAA==
    Metadata:
      aws:cdk:path: WorkspaceStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2"
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/cdk-bootstrap/hnb659fds/version"
    Description: Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - af-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-3
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-south-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-3
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-4
      - Fn::Equals:
        - Ref: AWS::Region
        - ca-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ca-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-northwest-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-central-2
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-south-2
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-2
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-3
      - Fn::Equals:
        - Ref: AWS::Region
        - il-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - me-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - me-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - sa-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-2
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-1
    - Fn::Equals:
      - Ref: AWS::Region
      - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Contains:
          - - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          - Ref: BootstrapVersion
      AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
        with a recent version of the CDK CLI.
